---
import type { Post } from '../lib/posts';
import { formatDate } from '../lib/posts';

interface Props {
  posts: Post[];
}

const { posts } = Astro.props;

const getPlatformIcon = (platform: string) => {
  switch (platform) {
    case 'zenn': return '📘';
    case 'qiita': return '📗';
    case 'blog': return '✏️';
    default: return '📄';
  }
};
---

<ul class="space-y-4">
  {posts.map(post => (
    <li class="border-b pb-4">
      <article class="group">
        <a
          href={post.data.platform === 'blog' ? `/blog/${post.slug}` : post.data.link}
          class="block hover:bg-gray-50 dark:hover:bg-gray-800 p-4 rounded-lg transition"
          target={post.data.platform === 'blog' ? '_self' : '_blank'}
          rel={post.data.platform === 'blog' ? '' : 'noopener noreferrer'}
        >
          <div class="flex items-center gap-2 text-sm text-gray-600 dark:text-gray-400 mb-2">
            <span>{getPlatformIcon(post.data.platform)}</span>
            <time datetime={post.data.pubDate.toISOString()}>
              {formatDate(post.data.pubDate)}
            </time>
          </div>

          <h2 class="text-xl font-semibold group-hover:text-blue-600 dark:group-hover:text-blue-400">
            {post.data.title}
          </h2>

          {post.data.description && (
            <p class="mt-2 text-gray-600 dark:text-gray-400 line-clamp-2">
              {post.data.description}
            </p>
          )}

          {post.data.tags && post.data.tags.length > 0 && (
            <div class="mt-3 flex flex-wrap gap-2">
              {post.data.tags.map(tag => (
                <span class="text-xs bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded">
                  {tag}
                </span>
              ))}
            </div>
          )}
        </a>
      </article>
    </li>
  ))}
</ul>
